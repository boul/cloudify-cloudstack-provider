authentication:
    api_key: 'API_KEY'
    api_secret_key: 'API_SECRET_KEY'
    api_url: 'https://cloudstack/client/api'

# # zone type basic or advanced
# cloudstack:
#     zone_type: 'advanced'    

# compute:
#     management_server:
#         use_existing: false
#         use_private_ip: false
#         user_on_management: root
#         userhome_on_management: /root
#         instance:
#             name: cloudify-management-server
#             image: 8e6cb1ed-9c9a-4e5b-88f4-407437fd5eee 
#             size: employee-medium-ha
#             private_ip:
#         management_keypair:
#             use_existing: true
#             name: cloudify-management-kp
# #            provided:
# #                public_key_filepath:
# #                private_key_filepath: ~/.ssh/cloudify-management-kp.pem
#             auto_generated:
#                 private_key_target_path: ~/.ssh/cloudify-management-kp.pem
#     agent_servers:
#         agents_keypair:
#             use_existing: true
#             name: cloudify-agents-kp
# #            provided:
# #                public_key_filepath:
# #                private_key_filepath: ~/.ssh/cloudify-agents-kp.pem
#             auto_generated:
#                 private_key_target_path: ~/.ssh/cloudify-agents-kp.pem


# networking:
#     management_network:
#         use_existing: false
#         name: cloudify-management-network
#         network_type: advanced
#         network_offering: SourceNatNiciraNvpNetwork
#         network_gateway: 10.10.1.1
#         network_mask: 255.255.255.0
#         network_zone: BETA-SBP-DC-1
#         network_domain: 'cloudify.local'
#         protocol: TCP
#         cidr: 0.0.0.0/0
#         ports: [5555, 5672, 53229, 22, 8100, 80]
# #    management_security_group:
# #        use_existing: False
# #        name: cloudify-sg-management
# #        protocol: TCP
# #        cidr: 0.0.0.0/0
# #        ports: [5555, 5672, 53229, 22, 8100, 80]

# # Cloudify Installation Configuration
# ##################################
# cloudify:
#     server:
#         packages:
#             components_package_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.1.0/m4-RELEASE/cloudify-components_3.1.0-m4-b81_amd64.deb
#             core_package_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.1.0/m4-RELEASE/cloudify-core_3.1.0-m4-b81_amd64.deb
#             ui_package_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.1.0/m4-RELEASE/cloudify-ui_3.1.0-m4-b81_amd64.deb
#     agents:
#         packages:
#             ubuntu_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.1.0/m4-RELEASE/cloudify-ubuntu-agent_3.1.0-m4-b81_amd64.deb
#             centos_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.1.0/m4-RELEASE/cloudify-centos-agent_3.1.0-m4-b81_amd64.deb
#             windows_agent_url: http://gigaspaces-repository-eu.s3.amazonaws.com/org/cloudify3/3.1.0/m4-RELEASE/cloudify-windows-agent_3.1.0-m4-b81_amd64.deb
#         config:
#             min_workers: 2
#             max_workers: 5
#             remote_execution_port: 22
#             #user: (no default - optional parameter)
#     workflows:
#         task_retries: -1  # -1 means we retry forever
#         retry_interval: 30
#     policy_engine:
#         start_timeout: 30
#     bootstrap:
#         ssh:
#             initial_connectivity_retries: 20
#             initial_connectivity_retries_interval: 15
#             command_retries: 3
#             retries_interval: 3
#             connection_attempts: 1
#             socket_timeout: 10

# #this section only applies to bootstrapping in --dev-mode
# dev:
#     #each section here is identified with one virtual environment
#     celery:
#         #which virtualenv dir does this apply to?
#         virtualenv: /opt/celery/cloudify.management__worker/env/
#         #which shell commands are run before the branches are deployed?
#         preruns:
#             - echo "Hi!"
#         downloads:
#             - https://github.com/cloudify-cosmo/cloudify-manager/archive/develop.tar.gz
#         #which branches will be applied to this virtualenv?
#         installs:
#             - /cloudify-manager-develop/plugins/agent-installer/
#             - /cloudify-manager-develop/plugins/plugin-installer/
#             - https://github.com/cloudify-cosmo/cloudify-plugins-common/archive/develop.tar.gz
#         #which shell commands are run after the branches are deployed?
#         runs:
#             - sudo /etc/init.d/celeryd-cloudify.management restart
#     manager:
#         virtualenv: /opt/manager
#         downloads:
#             - https://github.com/cloudify-cosmo/cloudify-manager/archive/develop.tar.gz
#         installs:
#             - /cloudify-manager-develop/rest-service/
#             - /cloudify-manager-develop/plugins/agent-installer/
#             - /cloudify-manager-develop/plugins/plugin-installer/
#         runs:
#             - sudo cp -R /tmp/opt/manager/cloudify-manager-develop/resources/rest-service/cloudify /opt/manager/resources  # for resources and workflow service
#             - sudo cp -R /tmp/opt/manager/cloudify-manager-develop/* /opt/manager/cloudify-manager-develop/  # for resources and workflow service
#             - sudo rm -rf /tmp/opt/manager/lib/python2.7/site-packages/rest-service
#             - sudo restart workflow
#             - sudo status workflow
#             - sudo restart manager
#             - sudo status manager
